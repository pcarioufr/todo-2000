# Agentic Todo System - Cursor Rules

## Initiative Structure & Overview
This is an agentic todo management system with interconnected files:
- `todo.md` - Main todo dashboard with action items, risks, and wins
- `knowledge/initiatives/` - Initiative-specific information and status
- `knowledge/people/` - People management and interaction history
- `knowledge/routines.md` - Recurring activities and processes

## Dashboard Processing Logic
The AI automatically maintains the todo.md dashboard by intelligently aggregating content from source files. **No external scripts needed** - all logic is encoded in these rules.

### Automatic Dashboard Syncing
**ALWAYS automatically sync the dashboard** when:
- User updates any source file in knowledge/initiatives/ or knowledge/people/
- User asks for current status, risks, blockers, or wins
- User completes a major milestone or mentions a blocker
- User requests dashboard refresh/update
- User asks "what are my current risks/blockers/wins"

### Dashboard Generation Rules
When syncing todo.md, follow this structure:

#### 1. Header Section
```markdown
# Todo Dashboard üìã

*Last updated: [current date in YYYY-MM-DD format]*

This dashboard aggregates action items from all source files. **Update tasks in their source files** (knowledge/initiatives/, knowledge/people/, knowledge/routines.md) and the dashboard will auto-sync.

```

#### 2. Today's Focus (PRESERVE manually edited content)
- **NEVER overwrite** the "Today's Focus" section if it exists
- If missing, create template:
```markdown
## üéØ Today's Focus
*Edit this section manually for daily priorities*

- [ ] 
- [ ] 
- [ ] 

```

#### 3. Initiative Action Items
- Extract from ALL knowledge/initiatives/*.md files (except _template.md)
- For each initiative file:
  - Get initiative name from "**Initiative Name:**" line
  - Extract tasks from "Current Milestones" and "Action Items" sections
  - Only include unchecked tasks: `- [ ]`
  - Format as:
```markdown
### [Initiative Name]
*Source: [path/to/file.md](path/to/file.md)*

[extracted unchecked tasks]

```

#### 4. People Action Items
- Extract from ALL knowledge/people/*.md files (except _template.md)
- For each person file:
  - Get person name from "# " header line
  - Extract tasks from "## üöß Progress" section
  - Only include unchecked tasks: `- [ ]`
  - Format as:
```markdown
### [Person Name]
*Source: [path/to/file.md](path/to/file.md)*

[extracted unchecked tasks]

```

#### 5. Routine Items
- Always include these standard routine items:
```markdown
## üîÑ Routine Items

- [ ] Email Processing (Monday & Thursday mornings)
- [ ] Slack Message Unpiling (Daily, end of workday)
- [ ] Weekly Meeting Preparation (Sunday evening or Monday morning)
*Source: [knowledge/routines.md](knowledge/routines.md)*

```

#### 6. Risks & Blockers
- Extract from ALL source files:
  - Initiative files: content under "### Blockers" sections
  - People files: any risk-related content
  - Routines: any challenges mentioned
- Format as:
```markdown
## üö® Risks & Blockers

### Initiative Blockers
[For each initiative with blockers]
- **[Initiative Name]**
  [extracted blocker items, indented]

### System Health
[Check for missing referenced files, broken links, etc.]

```

#### 7. Wins & Achievements
- Extract from ALL source files:
  - Initiative files: content under "Completed Milestones" (completed tasks marked with `[x]`)
  - Initiative files: content under "Lessons Learned" sections
  - Recent accomplishments and optimizations
- Format as:
```markdown
## üéâ Wins & Achievements

### Initiative Achievements
[For each initiative with completed milestones]
- **[Initiative Name]**
  ‚úÖ [completed milestone text without checkbox]

### Key Learnings
[Extract lessons learned from initiative files]

```

#### 8. Quick Navigation
```markdown
## üóÇÔ∏è Quick Navigation

- [üöÄ All Initiatives](./knowledge/initiatives/)
- [üë• All People](./knowledge/people/)
- [üîÑ Routines](./knowledge/routines.md)

---
*This dashboard is auto-generated from source files. Update source files and the dashboard will sync automatically.*
```

### Status Reporting Logic
When user requests status/overview/report, automatically provide:
- **Active Tasks**: Count of unchecked items across all source files
- **Today's Focus**: Count of items in that section
- **Active Initiatives**: Count of initiatives with "Status: Active"
- **People with Development Items**: Count of people files with progress items
- **Routine Count**: Number of routines defined
- **Overdue Items**: Scan for "Due:" dates in the past
- **Recent Activity**: Summary of recent file changes

### Archive Management Logic
When user requests to archive completed tasks:
1. **Identify completed tasks**: Find all `- [x]` items in source files
2. **Create archive structure**: Use `archive/YYYY-WMM.md` format
3. **Move completed items**: From source files to archive
4. **Update source files**: Remove completed items from source
5. **Sync dashboard**: Refresh todo.md to reflect changes

### Health Check Logic
Automatically validate:
- **Required directories exist**: knowledge/initiatives/, knowledge/people/
- **Required files exist**: knowledge/routines.md, todo.md
- **Template files exist**: knowledge/initiatives/_template.md, knowledge/people/_template.md
- **Cross-references valid**: All initiative/people links resolve to existing files
- **Consistent formatting**: All files follow naming conventions
- **Recent updates**: Check for stale "Last Updated" dates

## Natural Language Triggers
Recognize these user requests and **automatically perform the actions**:

### Dashboard Syncing Triggers
- "Sync my todo dashboard" ‚Üí Auto-sync dashboard
- "Refresh my todo list" ‚Üí Auto-sync dashboard
- "Update my dashboard" ‚Üí Auto-sync dashboard
- "Show me current risks/blockers" ‚Üí Auto-sync dashboard
- "What are my recent wins/achievements" ‚Üí Auto-sync dashboard
- "Update my risks dashboard" ‚Üí Auto-sync dashboard
- "Refresh my wins summary" ‚Üí Auto-sync dashboard

### Status Report Triggers
- "Show me my current status" ‚Üí Generate status report
- "Give me an overview" ‚Üí Generate status report
- "What's my workload like" ‚Üí Generate status report
- "Generate a status report" ‚Üí Generate status report

### Archive Triggers
- "Archive my completed tasks" ‚Üí Perform archive operation
- "Clean up my completed tasks" ‚Üí Perform archive operation
- "Move completed items to archive" ‚Üí Perform archive operation

### Health Check Triggers
- "Check if everything is working" ‚Üí Perform health check
- "Validate my system" ‚Üí Perform health check
- "Are there any issues" ‚Üí Perform health check

## Key Relationships
- **todo.md is a DASHBOARD** that aggregates action items, risks, and wins from source files
- **Action items live in source files** (`knowledge/initiatives/`, `knowledge/people/`, `knowledge/routines.md`)
- **Update tasks in their source files**, not in todo.md
- People in `knowledge/people/` should be linked to initiatives where relevant
- Routines in `knowledge/routines.md` should be added to `todo.md` when relevant
- **All risks, wins, and action items** are consolidated in todo.md
- Dates and statuses should be consistent across files
- Routines should cross-reference related initiatives and people
- **Dashboard auto-syncs after updating source files**

## File Naming Conventions
- Initiative files: `kebab-case.md` (e.g., `website-redesign.md`)
- People files: `firstname-lastname.md` (e.g., `sarah-johnson.md`)
- All files use lowercase with hyphens

## Maintenance Patterns
When updating files, consider:
1. **Cross-references**: Update related files when changing initiative status or people involvement
2. **Date consistency**: Keep "Last Contact" and "Last Updated" dates current
3. **Action item tracking**: Ensure action items are reflected in both source and todo files
4. **Status propagation**: Initiative status changes should update related tasks
5. **Archive management**: Move completed tasks to archive sections weekly
6. **Auto-sync dashboard**: Automatically refresh todo.md after updates

## Template Usage
- Always use templates for new files to maintain consistency
- Help users copy from templates in each directory manually
- Guide them to fill in ALL metadata sections for proper structure
- Templates are in: knowledge/initiatives/_template.md, knowledge/people/_template.md
- Routines are managed in single file: knowledge/routines.md

## Intelligent Assistance
When user requests involve todo management:
1. **Automatically perform dashboard operations** using encoded logic
2. **Update related files** to maintain consistency
3. **Auto-sync dashboard** after updating source files
4. **Validate system health** proactively
5. **Suggest next steps** based on current state

## Daily/Weekly Workflows
- **Daily**: Update "Today's Focus" section in todo.md, provide status reports
- **Weekly**: Archive completed tasks, review initiative statuses, check people progress
- **Monthly**: Review and update initiative timelines and people development

## Content Guidelines
- Use consistent emoji prefixes for visual organization
- Include due dates in tasks when relevant
- Cross-reference related items using markdown links
- Keep personal notes in people files for relationship building
- Track blockers and dependencies explicitly

## AI Integration Philosophy
This system is designed to be **fully agentic** - the AI should:
- **Automatically maintain** dashboard synchronization
- **Intelligently aggregate** content from source files
- **Understand relationships** across initiatives, people, and tasks
- **Anticipate needs** based on user patterns and requests
- **Reduce manual work** by automating all routine tasks
- **Proactively suggest** optimizations and improvements

## When Creating New Files
1. **Help user copy from templates** (knowledge/initiatives/_template.md, knowledge/people/_template.md)
2. Guide them to update all metadata fields
3. Add cross-references to related files
4. **Auto-sync dashboard** to reflect new content
5. Consider updating initiative files if new people are added
6. For routines, reference knowledge/routines.md for timing and details

## When Updating Existing Files
1. Check for cross-references that need updating
2. Update relevant dates and progress
3. Move completed items to archive sections
4. Propagate status changes to related files
5. **Auto-sync dashboard** to reflect changes
6. **Validate system health** if major changes
7. **Dashboard automatically includes** all risks, wins, and action items

## Example Interactions
**User**: "I need to start tracking a new initiative for the mobile app redesign"
**Cursor**: *Helps user copy from knowledge/initiatives/_template.md and guides them to fill it out, then auto-syncs dashboard*

**User**: "Can you show me my current workload?"
**Cursor**: *Automatically generates status report with task counts, active initiatives, and recent activity*

**User**: "I need to update Sarah's development progress"
**Cursor**: *Opens Sarah's people file and helps update progress section, then auto-syncs dashboard*

**User**: "Clean up my completed tasks"
**Cursor**: *Automatically archives completed tasks and refreshes dashboard*

**User**: "What are my current risks and blockers?"
**Cursor**: *Auto-syncs dashboard to show consolidated risks section with current blockers*

**User**: "Show me what we've accomplished recently"
**Cursor**: *Auto-syncs dashboard to display wins section with recent achievements*

**User**: "We just completed the design phase!"
**Cursor**: *Updates initiative file and auto-syncs dashboard with updated wins*

**User**: "I just updated some tasks in my initiative files"
**Cursor**: *Automatically syncs dashboard to reflect changes*

## Proactive Automation
The AI should **automatically** perform these actions without being asked:
- **After editing source files**: Auto-sync dashboard
- **When user mentions accomplishments**: Update wins section
- **When user mentions blockers**: Update risks section
- **When user asks about status**: Generate comprehensive report
- **When user completes milestones**: Archive completed items
- **When inconsistencies detected**: Suggest corrections
- **When system health issues found**: Proactively fix them 